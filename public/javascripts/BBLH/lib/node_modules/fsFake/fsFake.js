/**
 * Created by jaric on 01.12.2014, changed to BBL in 08.07.2016, changed to BBLH 30.05.2017.
 */

if (typeof define !== 'function') {
    var define = require('amdefine')(module);
}

define(function (require, exports, module) {

    (function () {

        var fsFake = {};

        var BBLH;
        var Datatone;
        var data;

        function openSync(path, rights){
            //console.log("opening", path, rights);
            BBLH = require("BBLH");
            Datatone = BBLH.Datatone;
            data = new Datatone();

            var file = null;
            if (data.files === undefined || data.files === null) data.files = {};
            if (rights == "w"){
                file = {path: path, rights: rights, buffers: [], opened: true};
                data.files[path] = file;
                //console.warn("created file in memory", file);
            } else {
                console.error("no such rights were given", rights);
            }
            return file;
        }
        fsFake.openSync = openSync;

        function writeSync(descr, buffer){
            var allowWrite = false;
            if (allowWrite){
                descr.buffers.push(buffer);
            } else {
                descr.buffers = [];
            }
        }
        fsFake.writeSync = writeSync;

        function closeSync(descr){
            //console.log("closing", descr);
            descr.opened = false;
            //console.warn("closed file in memory", descr);
        }
        fsFake.closeSync = closeSync;

        // Node.js
        if (typeof module !== 'undefined' && module.exports) {
            module.exports = fsFake;
        }
        // AMD / RequireJS
        else if (typeof define !== 'undefined' && define.amd) {
            define([], function () {
                return fsFake;
            });
        }
        // included directly via <script> tag
        else {
            root.fs = fsFake;
        }

    }());

});
